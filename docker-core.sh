#!/bin/bash

# üê≥ GESTI√ìN DOCKER SERVICIOS CORE - FLORES VICTORIA v3.0
# Script para gestionar servicios core con Docker Compose

echo "üê≥ GESTI√ìN DOCKER SERVICIOS CORE - FLORES VICTORIA v3.0"
echo "====================================================="

# Colores
GREEN='\033[0;32m'
YELLOW='\033[1;33m' 
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

# Funci√≥n para mostrar ayuda
show_help() {
    echo ""
    echo -e "${BLUE}üìñ COMANDOS DISPONIBLES:${NC}"
    echo "  up        - Iniciar servicios core con Docker"
    echo "  down      - Detener servicios core"
    echo "  restart   - Reiniciar servicios core"
    echo "  status    - Ver estado de contenedores"
    echo "  logs      - Ver logs de todos los servicios"
    echo "  logs-ai   - Ver logs del AI Service"
    echo "  logs-order - Ver logs del Order Service" 
    echo "  logs-admin - Ver logs del Admin Panel"
    echo "  build     - Rebuil containers"
    echo "  clean     - Limpiar contenedores y vol√∫menes"
    echo "  help      - Mostrar esta ayuda"
    echo ""
    echo -e "${YELLOW}üí° Ejemplos:${NC}"
    echo "  ./docker-core.sh up"
    echo "  ./docker-core.sh logs-ai"
    echo "  ./docker-core.sh status"
}

# Verificar si docker-compose est√° disponible
check_docker() {
    if ! command -v docker-compose &> /dev/null; then
        echo -e "${RED}‚ùå docker-compose no est√° instalado${NC}"
        exit 1
    fi
    
    if ! docker info &> /dev/null; then
        echo -e "${RED}‚ùå Docker no est√° corriendo${NC}"
        exit 1
    fi
}

# Funci√≥n principal
case "$1" in
    up)
        echo -e "${BLUE}üöÄ Iniciando servicios core con Docker...${NC}"
        check_docker
        docker-compose -f docker-compose.core.yml up -d
        echo ""
        echo -e "${GREEN}‚úÖ Servicios iniciados${NC}"
        echo -e "${YELLOW}üîó URLs disponibles:${NC}"
        echo "  - Admin Panel: http://localhost:3020"
        echo "  - AI Service: http://localhost:3002/ai/recommendations"
        echo "  - Order Service: http://localhost:3004/api/orders"
        ;;
    down)
        echo -e "${BLUE}üõë Deteniendo servicios core...${NC}"
        check_docker
        docker-compose -f docker-compose.core.yml down
        echo -e "${GREEN}‚úÖ Servicios detenidos${NC}"
        ;;
    restart)
        echo -e "${BLUE}üîÑ Reiniciando servicios core...${NC}"
        check_docker
        docker-compose -f docker-compose.core.yml restart
        echo -e "${GREEN}‚úÖ Servicios reiniciados${NC}"
        ;;
    status)
        echo -e "${BLUE}üìä Estado de contenedores:${NC}"
        check_docker
        docker-compose -f docker-compose.core.yml ps
        ;;
    logs)
        echo -e "${BLUE}üìù Logs de todos los servicios:${NC}"
        check_docker
        docker-compose -f docker-compose.core.yml logs -f
        ;;
    logs-ai)
        echo -e "${BLUE}ü§ñ Logs del AI Service:${NC}"
        check_docker
        docker-compose -f docker-compose.core.yml logs -f ai-service
        ;;
    logs-order)
        echo -e "${BLUE}üõí Logs del Order Service:${NC}"
        check_docker
        docker-compose -f docker-compose.core.yml logs -f order-service
        ;;
    logs-admin)
        echo -e "${BLUE}üõ°Ô∏è Logs del Admin Panel:${NC}"
        check_docker
        docker-compose -f docker-compose.core.yml logs -f admin-panel
        ;;
    build)
        echo -e "${BLUE}üî® Rebuilding containers...${NC}"
        check_docker
        docker-compose -f docker-compose.core.yml build --no-cache
        echo -e "${GREEN}‚úÖ Containers rebuilt${NC}"
        ;;
    clean)
        echo -e "${BLUE}üßπ Limpiando contenedores y vol√∫menes...${NC}"
        check_docker
        docker-compose -f docker-compose.core.yml down -v --remove-orphans
        docker system prune -f
        echo -e "${GREEN}‚úÖ Limpieza completada${NC}"
        ;;
    help|--help|-h)
        show_help
        ;;
    "")
        echo -e "${YELLOW}‚ö†Ô∏è  No se especific√≥ ning√∫n comando${NC}"
        show_help
        ;;
    *)
        echo -e "${RED}‚ùå Comando desconocido: $1${NC}"
        show_help
        exit 1
        ;;
esac