# Networks definitions
networks:
  # Red para bases de datos (solo accesible por microservicios)
  database-network:
    driver: bridge
  
  # Red para microservicios (comunicación interna)
  microservices-network:
    driver: bridge
  
  # Red pública (solo para servicios que necesitan exposición externa)
  public-network:
    driver: bridge

  # Red para el sistema de logging
  logging-network:
    driver: bridge
  
  # Red para Redis
  flores-victoria-network:
    driver: bridge

volumes:
  mongodb_data:
  postgres_data:
  rabbitmq_data:
  redis_data:
    driver: local
  # Volúmenes para logs
  logs_data:
  product-service-logs:
  review-service-logs:
  contact-service-logs:
  auth-service-logs:
  user-service-logs:
  order-service-logs:
  cart-service-logs:
  wishlist-service-logs:
  api-gateway-logs:
  # Volúmenes para el sistema de logging
  elasticsearch_data:
  kibana_data:
  logstash_data:

secrets:
  # Secretos para bases de datos
  mongo_root_password:
    file: ./docker/secrets/mongo_root_password.txt
  postgres_password:
    file: ./docker/secrets/postgres_password.txt
  rabbitmq_password:
    file: ./docker/secrets/rabbitmq_password.txt
  
  # Secretos para autenticación
  jwt_secret:
    file: ./docker/secrets/jwt_secret.txt
  
  # Secretos para correo electrónico
  email_password:
    file: ./docker/secrets/email_password.txt

services:
  audit-service:
    build:
      context: ./microservices/audit-service
      dockerfile: Dockerfile
    container_name: flores-victoria-audit-service
    restart: unless-stopped
    ports:
      - "3005:3005"
    environment:
      - MONGO_URI=mongodb://mongo:27017/flores-victoria-audit
      - PORT=3005
    depends_on:
      - mongo
    networks:
      - flores-victoria-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3005/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  messaging-service:
    build:
      context: ./microservices/messaging-service
      dockerfile: Dockerfile
    container_name: flores-victoria-messaging-service
    restart: unless-stopped
    ports:
      - "3006:3006"
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - PORT=3006
    depends_on:
      - rabbitmq
    networks:
      - flores-victoria-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3006/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  i18n-service:
    build:
      context: ./microservices/i18n-service
      dockerfile: Dockerfile
    container_name: flores-victoria-i18n-service
    restart: unless-stopped
    ports:
      - "3007:3007"
    environment:
      - PORT=3007
    networks:
      - flores-victoria-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3007/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  analytics-service:
    build:
      context: ./microservices/analytics-service
      dockerfile: Dockerfile
    container_name: flores-victoria-analytics-service
    restart: unless-stopped
    ports:
      - "3008:3008"
    environment:
      - MONGO_URI=mongodb://mongo:27017/flores-victoria-analytics
      - PORT=3008
    depends_on:
      - mongo
    networks:
      - flores-victoria-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3008/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Sistema de Logging Centralizado - ELK Stack
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: flores-victoria--elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - logging-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: flores-victoria--kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch:9200"]
    volumes:
      - kibana_data:/usr/share/kibana/data
    ports:
      - "5601:5601"
    networks:
      - logging-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: flores-victoria--logstash
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./logging/logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./logging/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - logstash_data:/usr/share/logstash/data
    ports:
      - "5044:5044"
      - "9600:9600"
    networks:
      - logging-network
      - microservices-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: flores-victoria--filebeat
    depends_on:
      logstash:
        condition: service_started
    volumes:
      - ./logging/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./microservices/auth-service/logs:/auth-service/logs:ro
      - ./microservices/product-service/logs:/product-service/logs:ro
      - ./microservices/user-service/logs:/user-service/logs:ro
      - ./microservices/order-service/logs:/order-service/logs:ro
      - ./microservices/cart-service/logs:/cart-service/logs:ro
      - ./microservices/wishlist-service/logs:/wishlist-service/logs:ro
      - ./microservices/review-service/logs:/review-service/logs:ro
      - ./microservices/contact-service/logs:/contact-service/logs:ro
      - ./microservices/api-gateway/logs:/api-gateway/logs:ro
    networks:
      - logging-network
      - microservices-network
    user: root
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
  
  redis:
    image: redis:7-alpine
    container_name: flores-victoria-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - flores-victoria-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
