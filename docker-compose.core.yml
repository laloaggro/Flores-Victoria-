# Docker Compose para Servicios Core Activos - Flores Victoria v3.0
# Configuración optimizada para desarrollo con servicios principales

version: '3.8'

services:
  # Admin Panel - Puerto 3020
  admin-panel:
    build: 
      context: ./admin-panel
      dockerfile: Dockerfile
    container_name: flores-victoria-admin-panel
    restart: unless-stopped
    ports:
      - "3020:3020"
    environment:
      - NODE_ENV=development
      - PORT=3020
    volumes:
      - ./admin-panel:/app
      - /app/node_modules
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3020/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # AI Service - Puerto 3002
  ai-service:
    build:
      context: .
      dockerfile: Dockerfile.ai-service
    container_name: flores-victoria-ai-service
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - AI_SERVICE_PORT=3002
    volumes:
      - ./ai-simple.js:/app/ai-simple.js
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Order Service - Puerto 3004
  order-service:
    build:
      context: .
      dockerfile: Dockerfile.order-service
    container_name: flores-victoria-order-service
    restart: unless-stopped
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - ORDER_SERVICE_PORT=3004
    volumes:
      - ./order-service-simple.js:/app/order-service-simple.js
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  app-network:
    driver: bridge
    name: flores-victoria-network

# Comentarios de servicios en desarrollo:
#
# Los siguientes servicios están en desarrollo y no incluidos en este compose:
# - API Gateway (Puerto 3000)
# - Auth Service (Puerto 3001) 
# - User Service (Puerto 3003)
# - Cart Service (Puerto 3005)
# - Wishlist Service (Puerto 3006)
# - Review Service (Puerto 3007)
# - Contact Service (Puerto 3008)
#
# Bases de datos simplificadas (en memoria para desarrollo):
# - Los servicios core usan datos simulados
# - Para producción, agregar MongoDB, PostgreSQL, Redis
#
# Para iniciar solo servicios core:
# docker-compose -f docker-compose.core.yml up -d
#
# Para verificar servicios:
# docker-compose -f docker-compose.core.yml ps
# docker-compose -f docker-compose.core.yml logs -f