version: '3.8'

services:
  # Bases de datos
  mongodb:
    image: mongo:4.4
    container_name: flores-victoria-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - "27018:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:13
    container_name: flores-victoria-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: flores_user
      POSTGRES_PASSWORD: flores_password
      POSTGRES_DB: flores_db
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../postgres-init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flores_user -d flores_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:6-alpine
    container_name: flores-victoria-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Servicio de mensajer√≠a
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: flores-victoria-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    networks:
      - app-network
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Microservicios
  auth-service:
    build: ./microservices/auth-service
    container_name: flores-victoria-auth-service
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - AUTH_SERVICE_PORT=3001
      - NODE_ENV=development
    volumes:
      - ./microservices/auth-service:/app
      - /app/node_modules
      - auth-db-data:/usr/src/app/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "sh", "-c", "echo 'GET /health HTTP/1.1\r\nHost: localhost\r\n\r\n' | nc localhost 3001 | grep -q '200 OK' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Limitar recursos para prevenir reinicios constantes
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  product-service:
    build: ./microservices/product-service
    container_name: flores-victoria-product-service
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - PRODUCT_SERVICE_PORT=3002
      - PRODUCT_SERVICE_MONGODB_URI=mongodb://root:rootpassword@mongodb:27017/products_db?authSource=admin
      - NODE_ENV=production
    networks:
      - app-network
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3002/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service:
    build: ./microservices/user-service
    container_name: flores-victoria-user-service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      - USER_SERVICE_PORT=3003
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=flores_db
      - DB_USER=flores_user
      - DB_PASSWORD=flores_password
      - NODE_ENV=production
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3003/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  order-service:
    build: ./microservices/order-service
    container_name: flores-victoria-order-service
    restart: unless-stopped
    ports:
      - "3004:3004"
    environment:
      - ORDER_SERVICE_PORT=3004
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=flores_db
      - DB_USER=flores_user
      - DB_PASSWORD=flores_password
      - NODE_ENV=production
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3004/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  cart-service:
    build: ./microservices/cart-service
    container_name: flores-victoria-cart-service
    restart: unless-stopped
    ports:
      - "3005:3005"
    environment:
      - CART_SERVICE_PORT=3005
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NODE_ENV=production
    networks:
      - app-network
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3005/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  wishlist-service:
    build: ./microservices/wishlist-service
    container_name: flores-victoria-wishlist-service
    restart: unless-stopped
    ports:
      - "3006:3006"
    environment:
      - WISHLIST_SERVICE_PORT=3006
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NODE_ENV=production
    networks:
      - app-network
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3006/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  review-service:
    build: ./microservices/review-service
    container_name: flores-victoria-review-service
    restart: unless-stopped
    ports:
      - "3007:3007"
    environment:
      - REVIEW_SERVICE_PORT=3007
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=flores_db
      - DB_USER=flores_user
      - DB_PASSWORD=flores_password
      - NODE_ENV=production
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3007/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  contact-service:
    build: ./microservices/contact-service
    container_name: flores-victoria-contact-service
    restart: unless-stopped
    ports:
      - "3008:3008"
    environment:
      - CONTACT_SERVICE_PORT=3008
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=flores_db
      - DB_USER=flores_user
      - DB_PASSWORD=flores_password
      - NODE_ENV=production
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3008/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  i18n-service:
    build: ./microservices/i18n-service
    container_name: flores-victoria-i18n-service
    restart: unless-stopped
    ports:
      - "3009:3009"
    environment:
      - I18N_SERVICE_PORT=3009
      - NODE_ENV=production
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3009/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  audit-service:
    build: ./microservices/audit-service
    container_name: flores-victoria-audit-service
    restart: unless-stopped
    ports:
      - "3010:3010"
    environment:
      - AUDIT_SERVICE_PORT=3010
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=flores_db
      - DB_USER=flores_user
      - DB_PASSWORD=flores_password
      - NODE_ENV=production
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3010/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  analytics-service:
    build: ./microservices/analytics-service
    container_name: flores-victoria-analytics-service
    restart: unless-stopped
    ports:
      - "3011:3011"
    environment:
      - ANALYTICS_SERVICE_PORT=3011
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=flores_db
      - DB_USER=flores_user
      - DB_PASSWORD=flores_password
      - NODE_ENV=production
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3011/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  messaging-service:
    build: ./microservices/messaging-service
    container_name: flores-victoria-messaging-service
    restart: unless-stopped
    ports:
      - "3012:3012"
    environment:
      - MESSAGING_SERVICE_PORT=3012
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - NODE_ENV=production
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3012/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  api-gateway:
    build: ./microservices/api-gateway
    container_name: flores-victoria-api-gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - API_GATEWAY_PORT=3000
      - AUTH_SERVICE_URL=http://auth-service:3001
      - PRODUCT_SERVICE_URL=http://product-service:3002
      - USER_SERVICE_URL=http://user-service:3003
      - ORDER_SERVICE_URL=http://order-service:3004
      - CART_SERVICE_URL=http://cart-service:3005
      - WISHLIST_SERVICE_URL=http://wishlist-service:3006
      - REVIEW_SERVICE_URL=http://review-service:3007
      - CONTACT_SERVICE_URL=http://contact-service:3008
      - I18N_SERVICE_URL=http://i18n-service:3009
      - AUDIT_SERVICE_URL=http://audit-service:3010
      - ANALYTICS_SERVICE_URL=http://analytics-service:3011
      - MESSAGING_SERVICE_URL=http://messaging-service:3012
      - NODE_ENV=production
    networks:
      - app-network
    depends_on:
      - auth-service
      - product-service
      - user-service
      - order-service
      - cart-service
      - wishlist-service
      - review-service
      - contact-service
      - i18n-service
      - audit-service
      - analytics-service
      - messaging-service
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

# Vol√∫menes
volumes:
  postgres-data:
  mongodb-data:
  redis-data:
  rabbitmq-data:
  auth-db-data:
  elasticsearch-data:

# Redes
networks:
  app-network:
    driver: bridge