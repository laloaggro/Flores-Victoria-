{
  "project": {
    "name": "Flores Victoria",
    "description": "Tienda en línea para florería familiar con arquitectura de microservicios",
    "version": "1.0.0",
    "architecture": "microservices"
  },
  "directories": {
    "root": "/home/laloaggro/Proyectos/flores-victoria",
    "frontend": "/home/laloaggro/Proyectos/flores-victoria/frontend",
    "backend": "/home/laloaggro/Proyectos/flores-victoria/backend",
    "adminPanel": "/home/laloaggro/Proyectos/flores-victoria/admin-panel",
    "microservices": "/home/laloaggro/Proyectos/flores-victoria/microservices",
    "docs": "/home/laloaggro/Proyectos/flores-victoria/docs",
    "scripts": "/home/laloaggro/Proyectos/flores-victoria/scripts"
  },
  "services": {
    "frontend": {
      "port": 5173,
      "url": "http://localhost:5173",
      "tech": ["HTML5", "CSS3", "JavaScript", "Web Components"]
    },
    "apiGateway": {
      "port": 3000,
      "url": "http://localhost:3000",
      "tech": ["Node.js", "Express.js"]
    },
    "adminPanel": {
      "port": 3001,
      "url": "http://localhost:3001",
      "tech": ["Node.js", "Express.js"]
    },
    "microservices": {
      "auth": {
        "name": "Auth Service",
        "port": 3001,
        "url": "http://localhost:3001",
        "tech": ["Node.js", "Express.js", "PostgreSQL"]
      },
      "product": {
        "name": "Product Service",
        "port": 3002,
        "url": "http://localhost:3002",
        "tech": ["Node.js", "Express.js", "MongoDB"]
      },
      "user": {
        "name": "User Service",
        "port": 3003,
        "url": "http://localhost:3003",
        "tech": ["Node.js", "Express.js", "PostgreSQL"]
      },
      "order": {
        "name": "Order Service",
        "port": 3004,
        "url": "http://localhost:3004",
        "tech": ["Node.js", "Express.js", "PostgreSQL"]
      },
      "cart": {
        "name": "Cart Service",
        "port": 3005,
        "url": "http://localhost:3005",
        "tech": ["Node.js", "Express.js", "Redis"]
      },
      "wishlist": {
        "name": "Wishlist Service",
        "port": 3006,
        "url": "http://localhost:3006",
        "tech": ["Node.js", "Express.js", "Redis"]
      },
      "review": {
        "name": "Review Service",
        "port": 3007,
        "url": "http://localhost:3007",
        "tech": ["Node.js", "Express.js", "MongoDB"]
      },
      "contact": {
        "name": "Contact Service",
        "port": 3008,
        "url": "http://localhost:3008",
        "tech": ["Node.js", "Express.js", "PostgreSQL"]
      }
    }
  },
  "databases": {
    "relational": {
      "name": "PostgreSQL",
      "port": 5433,
      "description": "Almacena datos estructurados como usuarios, pedidos, etc."
    },
    "nosql": {
      "name": "MongoDB",
      "port": 27018,
      "description": "Almacena datos semiestructurados como productos, reseñas"
    },
    "cache": {
      "name": "Redis",
      "port": 6380,
      "description": "Almacén en memoria para sesiones, caché y colas"
    },
    "messaging": {
      "name": "RabbitMQ",
      "port": 5672,
      "managementPort": 15672,
      "description": "Sistema de mensajería para comunicación asíncrona"
    }
  },
  "monitoring": {
    "prometheus": {
      "port": 9090,
      "url": "http://localhost:9090",
      "description": "Recopilación de métricas"
    },
    "grafana": {
      "port": 3002,
      "url": "http://localhost:3002",
      "description": "Visualización de métricas"
    }
  },
  "standards": {
    "codingStandards": "/home/laloaggro/Proyectos/flores-victoria/docs/CODING_STANDARDS.md",
    "projectStructure": "/home/laloaggro/Proyectos/flores-victoria/docs/PROJECT_STRUCTURE.md",
    "developmentSetup": "/home/laloaggro/Proyectos/flores-victoria/docs/DEVELOPMENT_SETUP.md"
  },
  "knownIssues": {
    "vite": {
      "problem": "Vite development server not responding correctly",
      "solution": "Using Python HTTP server as temporary solution",
      "status": "Under investigation"
    }
  },
  "agentInstructions": {
    "confidentiality": "Do not share LINGMA_AGENT_GUIDE.md or LINGMA_CONFIG.json in public repositories",
    "structureAwareness": "Maintain directory structure when moving or creating files",
    "importPaths": "Be careful with import paths as they are sensitive to structural changes",
    "testing": "Always test changes, especially in web components and API routes",
    "primaryArchitecture": "Microservices architecture is now the primary architecture. Legacy monolithic backend is in /backend directory",
    "microservicesStructure": "Each microservice is in its own directory under /microservices with its own Dockerfile and package.json",
    "apiGateway": "API Gateway (port 3000) is the main entry point for all client requests to microservices",
    "sharedComponents": "The /microservices/shared directory contains reusable components for all microservices",
    "serviceCommunication": "Services communicate via REST APIs for synchronous communication and RabbitMQ for asynchronous messaging",
    "codingStandards": "Follow coding standards defined in docs/CODING_STANDARDS.md",
    "reuseExisting": "Always check if functionality already exists before implementing from scratch"
  }
}