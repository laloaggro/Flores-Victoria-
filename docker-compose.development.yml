version: '3.8'

# ðŸ”µ DEVELOPMENT ENVIRONMENT - Flores Victoria v3.0
# Puertos: 3xxx, 9090

services:
  # Core Services
  ai-service:
    build:
      context: .
      dockerfile: Dockerfile.ai-service
    container_name: flores-ai-dev
    environment:
      - NODE_ENV=development
      - PORT=3013
    ports:
      - "3013:3013"
    networks:
      - flores-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3013/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  order-service:
    build:
      context: .
      dockerfile: Dockerfile.order-service
    container_name: flores-order-dev
    environment:
      - NODE_ENV=development
      - PORT=3004
    ports:
      - "3004:3004"
    networks:
      - flores-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  admin-panel:
    build:
      context: ./admin-panel
      dockerfile: Dockerfile
    container_name: flores-admin-dev
    environment:
      - NODE_ENV=development
      - PORT=3021
    ports:
      - "3021:3021"
    networks:
      - flores-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3021/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  auth-service:
    build:
      context: .
      dockerfile: Dockerfile.auth-service
    container_name: flores-auth-dev
    environment:
      - NODE_ENV=development
      - PORT=3017
      - JWT_SECRET=dev-secret-key-change-in-production
      - JWT_EXPIRES_IN=24h
    ports:
      - "3017:3017"
    networks:
      - flores-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3017/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  payment-service:
    build:
      context: .
      dockerfile: Dockerfile.payment-service
    container_name: flores-payment-dev
    environment:
      - NODE_ENV=development
      - PORT=3018
    ports:
      - "3018:3018"
    networks:
      - flores-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3018/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  notification-service:
    build:
      context: .
      dockerfile: Dockerfile.notification-service
    container_name: flores-notification-dev
    environment:
      - NODE_ENV=development
      - PORT=3016
    ports:
      - "3016:3016"
    networks:
      - flores-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3016/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring
  prometheus:
    image: prom/prometheus:v2.37.0
    container_name: flores-prometheus-dev
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus-dev.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-dev-data:/prometheus
    networks:
      - flores-dev
    restart: unless-stopped

  grafana:
    image: grafana/grafana-enterprise:latest
    container_name: flores-grafana-dev
    ports:
      - "3011:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - grafana-dev-data:/var/lib/grafana
    networks:
      - flores-dev
    restart: unless-stopped
    depends_on:
      - prometheus

  # Databases
  postgres:
    image: postgres:15-alpine
    container_name: flores-postgres-dev
    environment:
      - POSTGRES_DB=flores_dev
      - POSTGRES_USER=flores_user
      - POSTGRES_PASSWORD=flores_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
    networks:
      - flores-dev
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: flores-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis-dev-data:/data
    networks:
      - flores-dev
    restart: unless-stopped
    command: redis-server --appendonly yes

networks:
  flores-dev:
    driver: bridge
    name: flores-dev-network

volumes:
  prometheus-dev-data:
  grafana-dev-data:
  postgres-dev-data:
  redis-dev-data:
