name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: flores_user
          POSTGRES_PASSWORD: flores_password
          POSTGRES_DB: flores_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:6-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      mongodb:
        image: mongo:4.4
        options: >-
          --health-cmd echo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        # Install dependencies for each microservice
        for dir in microservices/*/; do
          if [ -f "$dir/package.json" ]; then
            cd "$dir"
            npm ci
            cd ../..
          fi
        done
        # Install frontend dependencies
        cd frontend
        npm ci
        cd ..

    - name: Run unit tests
      run: |
        npm test
      env:
        DB_HOST: localhost
        DB_USER: flores_user
        DB_PASSWORD: flores_password
        DB_NAME: flores_db
        DB_PORT: 5432
        REDIS_HOST: localhost
        REDIS_PORT: 6379
        MONGO_URI: mongodb://localhost:27017/test
        JWT_SECRET: test_secret_key

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3

    - name: Build Docker images
      run: |
        # Build images for all microservices
        for dir in microservices/*/; do
          if [ -f "$dir/Dockerfile" ]; then
            service_name=$(basename $dir)
            echo "Building $service_name"
            docker build -t floresvictoria/$service_name:latest $dir
          fi
        done
        # Build frontend image
        docker build -t floresvictoria/frontend:latest frontend

    - name: Push to registry (only on main branch)
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Images would be pushed to registry here"
        # This is where you would push to your container registry
        # docker push floresvictoria/api-gateway:latest
        # docker push floresvictoria/auth-service:latest
        # ... and so on for each service